{"version":3,"sources":["components/Task/Task.js","components/Control/Control.js","components/List/List.js","core/App.js","index.js"],"names":["Task","state","isCheckboxChecked","props","isCompleted","handleDelete","id","deleteTask","handleChangeStatus","completeTask","setState","prevState","this","content","className","type","checked","onChange","Button","variant","onClick","React","Component","Control","inputValue","selectedValue","handleChange","e","target","value","handleClick","addTask","handleKeyDown","key","handleFilterChange","setFilter","onKeyDown","List","tasks","filteredTasks","currentTasks","isFiltered","ListGroup","length","map","task","ListGroupItem","App","filterType","data","newTask","Date","localStorage","setItem","JSON","stringify","updatedTasks","filter","savedTasks","getItem","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1618edd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport './Task.css';\r\n\r\nclass Task extends React.Component {\r\n  state = {\r\n    isCheckboxChecked: this.props.isCompleted\r\n  }\r\n\r\n  handleDelete = () => {\r\n    const { id, deleteTask } = this.props\r\n\r\n    deleteTask(id)\r\n  }\r\n\r\n  handleChangeStatus = () => {\r\n    const { id, completeTask } = this.props\r\n\r\n    this.setState((prevState) =>\r\n     ({ isCheckboxChecked: !prevState.isCheckboxChecked }), () => completeTask(id, this.state.isCheckboxChecked))\r\n  }\r\n\r\n  render() {\r\n    const { isCheckboxChecked } = this.state\r\n    const { id, content } = this.props\r\n    \r\n    return (\r\n      <div className='task'>\r\n        <input type='checkbox' checked={isCheckboxChecked} onChange={this.handleChangeStatus} />\r\n        <div>\r\n          {content}\r\n        </div>\r\n        <Button variant='danger' onClick={this.handleDelete}>X</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport { Task };","import React from 'react';\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport './Control.css';\r\n\r\nclass Control extends React.Component {\r\n  state = {\r\n    inputValue: '',\r\n    selectedValue: 'all'\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ inputValue: e.target.value })\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { addTask } = this.props\r\n\r\n    addTask(this.state.inputValue)\r\n\r\n    this.setState({ inputValue: '' })\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.key === 'Enter') {\r\n      this.handleClick()\r\n    }\r\n  }\r\n\r\n  handleFilterChange = e => {\r\n    const { setFilter } = this.props\r\n\r\n    this.setState({ selectedValue: e.target.value }, () => setFilter(this.state.selectedValue))\r\n  }\r\n\r\n  render() {\r\n    const { inputValue, selectedValue } = this.state\r\n    \r\n    return (\r\n      <div className='control'>\r\n        <input value={inputValue} onChange={this.handleChange} onKeyDown={this.handleKeyDown} />\r\n        <Button variant='success' onClick={this.handleClick}>+</Button>\r\n        <select onChange={this.handleFilterChange} value={selectedValue} className=\"filter\">\r\n          <option value=\"all\">Все задачи</option>\r\n          <option value=\"unsuccess\">Только невыполненные</option>\r\n          <option value=\"success\">Только выполненные</option>\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport { Control };","import React from 'react';\r\nimport { Task } from '../Task/Task'\r\n\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\r\n\r\nimport './List.css';\r\n\r\nclass List extends React.Component {\r\n  render() {\r\n    const { tasks, deleteTask, completeTask, filteredTasks, isFiltered } = this.props\r\n\r\n    const currentTasks = isFiltered ? filteredTasks : tasks\r\n\r\n    return (\r\n      <ListGroup>\r\n        {currentTasks.length > 0 &&\r\n          currentTasks.map(task => \r\n            <ListGroupItem>\r\n              <Task \r\n                key={task.id} \r\n                id={task.id} \r\n                content={task.content} \r\n                isCompleted={task.isCompleted} \r\n                deleteTask={deleteTask} \r\n                completeTask={completeTask}\r\n              />\r\n            </ListGroupItem>\r\n           )\r\n        }\r\n        {currentTasks.length === 0 && 'Тасок пока нет!'}\r\n      </ListGroup>\r\n    )\r\n  }\r\n}\r\n\r\nexport { List };","import React from 'react';\nimport { Control, List } from '../components'\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n    filteredTasks: [],\n    filterType: 'all',\n    isFiltered: false\n  }\n\n  componentDidMount() {\n    const savedTasks = localStorage.getItem('tasks')\n\n    if (savedTasks) {\n      this.setState({ tasks: JSON.parse(savedTasks) })\n    }\n  }\n\n\n  addTask = (data) => {\n    const { tasks } = this.state\n    \n    if (data) {\n      const newTask = { id: +new Date(), content: data, isCompleted: false }\n\n      this.setState({ tasks: [...tasks, newTask] }, () => localStorage.setItem('tasks', JSON.stringify(this.state.tasks)))\n    }\n  }\n\n  deleteTask = (id) => {\n    const { tasks } = this.state\n\n    const updatedTasks = tasks.filter((task) => task.id !== id)\n\n    this.setState({ tasks: updatedTasks }, () => localStorage.setItem('tasks', JSON.stringify(this.state.tasks)))\n  }\n\n  completeTask = (id, isCompleted) => {\n    const { tasks } = this.state\n\n    const updatedTasks = tasks.map((task) => task.id === id ? ({ ...task, isCompleted }) : task)\n\n    this.setState({ tasks: updatedTasks }, () => localStorage.setItem('tasks', JSON.stringify(this.state.tasks)))\n  }\n\n  setFilter = (filterType) => {\n    const { tasks } = this.state\n\n    this.setState({ filterType }, () => {\n      if (this.state.filterType === 'success') {\n        return this.setState({ filteredTasks: tasks.filter((task) => task.isCompleted), isFiltered: true })\n      }\n\n      if (this.state.filterType === 'unsuccess') {\n        return this.setState({ filteredTasks: tasks.filter((task) => !task.isCompleted), isFiltered: true })\n      }\n\n      return this.setState({ filteredTasks: [], isFiltered: false })\n    })\n  }\n\n  render() {\n    const { tasks, filteredTasks, isFiltered } = this.state\n\n    return (\n      <div className=\"App\">\n        <Control setFilter={this.setFilter} addTask={this.addTask} />\n        <List\n          isFiltered={isFiltered}\n          deleteTask={this.deleteTask}\n          completeTask={this.completeTask}\n          tasks={tasks}\n          filteredTasks={filteredTasks}\n        />\n      </div>\n    );\n  }\n}\n\n// App (общий родитель)\n// Control (инпут, кнопка добавить)\n// List (список тасок)\n// Task (таска, название ее, чекбокс, кнопка удалить)\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './core/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}